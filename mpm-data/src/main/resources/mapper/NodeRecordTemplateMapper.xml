<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gm.mpm.data.mapper.NodeRecordTemplateMapper">
  <resultMap id="BaseResultMap" type="com.gm.mpm.data.model.NodeRecordTemplate">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="flow_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="state" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="start_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="end_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="means" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, flow_id, state, start_time, end_time, means
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from node_record_template
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from node_record_template
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.gm.mpm.data.model.NodeRecordTemplate">
    insert into node_record_template (id, flow_id, state, 
      start_time, end_time, means
      )
    values (#{id,jdbcType=BIGINT}, #{flowId,jdbcType=BIGINT}, #{state,jdbcType=BIT}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{means,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.gm.mpm.data.model.NodeRecordTemplate">
    insert into node_record_template
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="flowId != null">
        flow_id,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="means != null">
        means,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="flowId != null">
        #{flowId,jdbcType=BIGINT},
      </if>
      <if test="state != null">
        #{state,jdbcType=BIT},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="means != null">
        #{means,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gm.mpm.data.model.NodeRecordTemplate">
    update node_record_template
    <set>
      <if test="flowId != null">
        flow_id = #{flowId,jdbcType=BIGINT},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=BIT},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="means != null">
        means = #{means,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gm.mpm.data.model.NodeRecordTemplate">
    update node_record_template
    set flow_id = #{flowId,jdbcType=BIGINT},
      state = #{state,jdbcType=BIT},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      means = #{means,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>